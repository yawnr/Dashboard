c
parsed.css('#formDiv .tableFile tr')[1].text
parsed.css('#formDiv .tableFile tr')[1][1].text
parsed.css('#formDiv .tableFile tr')[1]
parsed.css('#formDiv .tableFile tr td')
parsed.css('#formDiv .tableFile')
parsed.css('.tableFile').css('td')[2].text
parsed.css('.tableFile').css('td')[2]
parsed.css('.tableFile').css('td').text
parsed.css('.tableFile').css('td')
parsed.css('.tableFile tr')[0..2][2].text
parsed.css('.tableFile tr')[0..2][2]
parsed.css('.tableFile tr')[0..2][1][1]
parsed.css('.tableFile tr')[0..2][1].text
parsed.css('.tableFile tr')[0..2][1]
parsed.css('.tableFile tr')[0..2]
parsed.at_css('.tableFile')
parsed = Nokogiri::HTML(filings[0].content)
filings[0].file_id
filings[0].term
filings[0].cik
filings[0].title
filings[0].summary
filings[0].methods
filings[0].description
filings[0].content
filings[0].type
filings[0].methods
filings[0]
c
filings[0].to_json
filings[0]
filings
c
filings[8].pretty_print_instance_variables
filings[8].pretty_print
filings[8].to_json
filings[8].to_json_without_active_support_encoder
filings[8].to_json_with_active_support_encoder
filings[8].title
filings[8].pretty_inspect
filings[8].methods
filings.length
filings[8]
filings[0]
filings
c
a.filings
f
a
f = a.filings
a.filings
a.methods.sort
a = SecQuery::Entity.find('aapl')
SecQuery::Entity.find('aapl', :filings)
SecQuery::Entity.find('aapl')
SecQuery::Entity.methods
SecQuery.Entity.methods
SecQuery::Entity.find(company.ticker.upcase, :relationships=> true, :transactions=> {:start=> 0, :count=>20, :limit=> 20}, :filings=>{:start=> 0, :count=> 20, :limit=> 20})
c
SecEdgar::Helpers.methods.sort
c
json_response
financial_data
c
financial_data
c
financial_data
c
financial_data
c
exit
sec_data
json_response
c
json_response
c
sec_url
c
exit
sec_data
exit
json_response
c
sec_url
n
SecQuery::Entity.find('aapl')
c
financial_data.is_a?(Array)
financial_data.is_a(Array)
financial_data.methods.sort
financial_data.methods
financial_data.type
financial_data
i
financial_data[i]
company_hash
c
nc
n
financial_data
companies
c
companies
c
financial_data
n
tickers
c
tickers
['aapl'].join(',')
financials = StockQuote::Stock.json_quote('aapl,')['quote']
financials = StockQuote::Stock.json_quote('aapl,')
c
json_response
c
company_hash["ticker"]
company_hash[:ticker]
company_hash.ticker
company_hash
company_hash['ticker']
c
financial_data[i]['symbol']
financial_data[i]
c
json_response
c
financial_data
n
tickers
c
financial_data.css('ebitda')[0].text
n
c
financial_data.css('dayslow')[0].text
financial_data.css('dayshigh')[0].text
financial_data.css('ebitda')[0].text
financial_data.css('ebitda')
financial_data.css('EBITDA')
financial_data
n
c
n
c
financial_data.css('bid')[0].text
financial_data.css('bid')[0]
financial_data.css('bid')
financial_data
company_hash
n
c
financial_data
n
data_url
c
company_hash
company_has
c
stock
stock = StockQuote::Stock.json_quote(company.ticker.downcase)
stock
stock = StockQuote::Stock.quote(company.ticker.downcase)
company.ticker.downcase
c
continue
c
json_response
c
companies
c
@companies
ok
c
n
c
n
c
n
c
n
c
n
flash.now[:errors]
n
flash.now[:errors]
n
flash.now[:errors]
n
flash.now[:errors]
n
user
c
@financial_data.css('dayshigh').each do |thing|
@financial_data.css('dayshigh').text
@financial_data.css('dayshigh')
@financial_data
c
@financial_data
exit
@data
data
n
